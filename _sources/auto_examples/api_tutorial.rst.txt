
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "auto_examples/api_tutorial.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_auto_examples_api_tutorial.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_auto_examples_api_tutorial.py:


Introductory example - using the API
====================================

This small tutorial walks through the basics of using an API.
The most basic thing to do is submit a job to the API,
list, get statuses, cancel. We can use our example client for this.

.. GENERATED FROM PYTHON SOURCE LINES 10-32

.. code-block:: default


    import json
    import os
    import sys

    import matplotlib.pyplot as plt

    # This is expected to be rendered from docs root
    here = os.path.dirname(os.path.abspath(os.getcwd()))
    root = os.path.dirname(here)

    # This is here for the nice thumbnail :)
    image = plt.imread(os.path.join(here, "images", "logo.png"))
    fig = plt.imshow(image)
    plt.axis("off")
    plt.show()

    # This directory has the Python client
    sys.path.insert(0, os.path.join(root, "examples"))

    from flux_restful_client import FluxRestfulClient  # noqa




.. image-sg:: /auto_examples/images/sphx_glr_api_tutorial_001.png
   :alt: api tutorial
   :srcset: /auto_examples/images/sphx_glr_api_tutorial_001.png
   :class: sphx-glr-single-img





.. GENERATED FROM PYTHON SOURCE LINES 33-36

Here we instantiate a client. If you need authentication, this can optionally take
a user and token, or also derive from the FLUX_USER and FLUX_TOKEN in the
environment.

.. GENERATED FROM PYTHON SOURCE LINES 36-39

.. code-block:: default


    cli = FluxRestfulClient()








.. GENERATED FROM PYTHON SOURCE LINES 40-41

Let's list the nodes in our cluster!

.. GENERATED FROM PYTHON SOURCE LINES 41-47

.. code-block:: default

    print("Listing nodes")
    res = cli.list_nodes()
    if res:
        print(json.dumps(res, indent=4))






.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Listing nodes
    {}
    {
        "nodes": [
            "b27d01c1fd8c"
        ]
    }




.. GENERATED FROM PYTHON SOURCE LINES 48-49

Now let's submit a job to Flux.

.. GENERATED FROM PYTHON SOURCE LINES 49-58

.. code-block:: default


    print("üò¥ Submitting job sleep 60")
    res = cli.submit(command=["sleep", 60])

    # This is an indication something went wrong - detail has an error.
    if res and "detail" in res:
        print(res["detail"])
        sys.exit()





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    üò¥ Submitting job sleep 60
    {}




.. GENERATED FROM PYTHON SOURCE LINES 59-65

To require auth, the server should be startup with these variables
in the environment (and the first two found by the client here)
variables exported:
FLUX_USER=fluxuser
FLUX_TOKEN=12345
FLUX_REQUIRE_AUTH=true

.. GENERATED FROM PYTHON SOURCE LINES 67-68

And finally, let's get job info.

.. GENERATED FROM PYTHON SOURCE LINES 68-73

.. code-block:: default

    print("üçì Getting job info...")
    res = cli.jobs(res["id"])
    if res:
        print(json.dumps(res, indent=4))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    üçì Getting job info...
    {}
    {
        "job": {
            "id": 813376208896,
            "userid": 0,
            "urgency": 16,
            "priority": 16,
            "t_submit": 1667784569.2485256,
            "t_depend": 1667784569.2485256,
            "t_run": 1667784569.2629416,
            "state": 16,
            "name": "sleep",
            "ntasks": 1,
            "ncores": 1,
            "duration": 0.0,
            "nnodes": 1,
            "ranks": "0",
            "nodelist": "b27d01c1fd8c",
            "expiration": 4821384569.0
        }
    }




.. GENERATED FROM PYTHON SOURCE LINES 74-76

Now let's submit three jobs in unison so we can list them back!
Submit the job to flux

.. GENERATED FROM PYTHON SOURCE LINES 76-83

.. code-block:: default

    print("Submitting 3 jobs to sleep!")
    for time in [10, 20, 30]:
        cli.submit(command=["sleep", time])
    res = cli.jobs()
    if res:
        print(json.dumps(res, indent=4))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Submitting 3 jobs to sleep!
    {}
    {}
    {}
    {}
    {
        "jobs": [
            {
                "id": 814449950720
            },
            {
                "id": 814919712768
            },
            {
                "id": 813980188672
            },
            {
                "id": 813376208896
            }
        ]
    }




.. GENERATED FROM PYTHON SOURCE LINES 84-85

Finally, let's submit and cancel a job

.. GENERATED FROM PYTHON SOURCE LINES 85-93

.. code-block:: default

    print("Submitting job sleep 60 intending to cancel..")
    res = cli.submit(command=["sleep", 60])
    if res:
        print(json.dumps(res, indent=4))
        print("Requesting job cancel..")
        res = cli.cancel(res["id"])
        print(json.dumps(res, indent=4))





.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Submitting job sleep 60 intending to cancel..
    {}
    {
        "Message": "Job submit.",
        "id": 815456583680
    }
    Requesting job cancel..
    {}
    {
        "Message": "Job is requested to cancel."
    }




.. GENERATED FROM PYTHON SOURCE LINES 94-95

And this would be how you stop your cluster service

.. GENERATED FROM PYTHON SOURCE LINES 95-97

.. code-block:: default

    print("Stopping the service...")
    # res = cli.stop_service()




.. rst-class:: sphx-glr-script-out

 .. code-block:: none

    Stopping the service...





.. rst-class:: sphx-glr-timing

   **Total running time of the script:** ( 0 minutes  0.380 seconds)


.. _sphx_glr_download_auto_examples_api_tutorial.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: api_tutorial.py <api_tutorial.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: api_tutorial.ipynb <api_tutorial.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
